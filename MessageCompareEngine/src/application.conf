akka {
		 # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
		 loggers = ["akka.event.slf4j.Slf4jEventHandler"]
		
		 # Log level used by the configured loggers (see "event-handlers") as soon
		 # as they have been started; before that, see "stdout-loglevel"
		 # Options: ERROR, WARNING, INFO, DEBUG
		 loglevel = INFO
		
		 # Log level for the very basic logger activated during AkkaApplication startup
		 # Options: ERROR, WARNING, INFO, DEBUG
		 stdout-loglevel = INFO
		
		 log-config-on-start = on
		      
		 actor {
		    compare-dispatcher {
				# Throughput for default Dispatcher, set to 1 for as fair as possible
				throughput = 10
				# Dispatcher is the name of the event-based dispatcher
				type = Dispatcher
				# What kind of ExecutionService to use
				executor = "fork-join-executor"
				# Configuration for the fork join pool
				fork-join-executor {
				    # Min number of threads to cap factor-based parallelism number to
				    parallelism-min = 8
				    # Parallelism (threads) ... ceil(available processors * factor)
				    parallelism-factor = 3
				    # Max number of threads to cap factor-based parallelism number to
				    parallelism-max = 64
				}
		    }
		
		    creation-timeout = 30s
  		
		 }
}

com.compare.message.job.config {
	processingSystem = "compareMessage"
	
    # no startup delay by default
    startupDelay = 0s

    # watchout for new pending jobs every 5 seconds
    scheduleRate = 5s
    
    # Handlers
    handlers = [
	    {
	        name = CHANGEEVENT
	        class = com.csg.cs.aura.derivations.mq.domain.jobs.ChangeEventHandler
	    }
	]
	
	# max handler retries
	maxHandlerRetries = 2
	
    # Worker pool to execute the change log
    workerPoolSize = 5
	
	# Worker pool to execute the change log
	defaultJobTimeout = 5m
}

